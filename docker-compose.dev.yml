version: '3.8'

services:
  mcphub:
    image: mcphub:local
    container_name: mcphub-dev
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-this}
      - DATABASE_URL=postgresql://mcphub:mcphub_password@postgres:5432/mcphub?schema=public
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BASE_PATH=${BASE_PATH:-}
    volumes:
      - ./src:/app/src
      - ./frontend:/app/frontend
      - ./mcp_settings.json:/app/mcp_settings.json
      - ./data:/app/data
      - ./servers.json:/app/servers.json
    command: sh -c "cd /app && pnpm dev"
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mcphub-network

  postgres:
    image: pgvector/pgvector:pg16
    container_name: mcphub-postgres-dev
    environment:
      - POSTGRES_USER=mcphub
      - POSTGRES_PASSWORD=mcphub_password
      - POSTGRES_DB=mcphub
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcphub"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - mcphub-network

volumes:
  postgres-data-dev:
    driver: local

networks:
  mcphub-network:
    driver: bridge